
= Skytools ToDo list =

== Next major release - 3.0 ==

=== Standalone changes ===

 * Make Londiste support table wildcards.
 * plpgsql trigger for TRUNCATE / support for installing such trigger
 * Convert dispatcher scripts to new cascading framework
   - queue_mover - CascadedWorker (cascaded_worker.py?  node_worker.py)
   - queue_splitter - CascadedConsumer
   - bulk_loader - CascadedConsumer
   - cube_dispatcher - CascadedConsumer
   - table_dispatcher - CascadedConsumer
 * bulk_loader / cube_dispatcher / table_dispatcher could be merged
   to one script with 3 backends.
 * 'Q' event type for londiste, (queue_splitter event), for event
   that needs to be inserted into queue.  Also trigger flag to
   create such event.
   - better to be done as "redirect" - allow events for a table
     to be redirected to another table or queue.
 * londiste check
 * londiste fkeys

=== Core changes ===

ASAP:

 - move leaf event copy away from consumer/worker?

 - logging from db is mess, needs full cleanup
 - docstring review
 - dead node handling
 - failover - may affect db code

 - dbscript: document self.args
 - dbscript: easier help string setting

Soon:

 - pgq_node.is_root_event() rettype
 - exec_cmd better name
 - cleanup of hierarchical remove_event

 - make everything use next_batch_info()
 - londiste sql: fq names?  glob names?
 - CascadeAdmin: job_name vs. consumer_name as worker_name
 - setadm rename-node

No hurry:

 - psycopgwrapper full doc
 - londiste syncer: get provider db?
 - sleeps while waiting notices from db
 - dispatcher scripts: no need to check tables repeatedly
 - replace "raise Exception" for user errors with something
   nicer, (UsageError) which also should avoid traceback

 - copy vs. reorg
 - execute vs. copy - needs wait?
 - --wait/--nowait switch for execute

=== done ===

 - Move remaining sql functions away from ret types.
 - get rid of 'set' in londiste code?
 - londiste: add-seq refresh from provider

== old todo (not up-to-date) ==

 * pgqadm ticker delays, separate retry delay
 * pgq.drop_queue -> flag to drop consumers

 * cascaded replication, switchover, failover [marko]
   - advanced admin commands
     - failover
     - node-status
     - set-status
     - rename-node
     - on root switch/failover check if all tables are present

== High-prority ==

=== Smaller things ===

 * pgqadm: Utility commands:
  - reg-copy que cons1 cons2
  - reg-move que cons1 cons2
  - queue-rename
  - show-batch-events
  - del-event
 * londiste: londiste status cmd
  - check what modules are installed
  - check if replay is running (lag?)
  - check if copy is running (lag?)
  - count of tables done, count of unsynced
  - table in the middle of copy

== Low-priority ==

=== Larger things ===

 * skylog: publish sample logdb schema, with some tools
 * londiste/pgqset: support creating slave from master by pg_dump / PITR.

=== Smaller things ===

 * own async conn-to-conn copy loop
 * londiste: make sure unprivileged provider connection works for ordinery replication,
   but not for admin commands.  Need to remove SECURITY DEFINER from londiste
   admin functions (both provider and subscriber, because londiste needs admin
   rights on subscriber anyway).
 * pgqadm: separate priod for retry queue processing
 * skytools: switch for silence for cron scripts
 * DBScript: failure to write pidfile should be logged (cronscripts)
 * ideas from SlonyI:
  - when buffering queries, check their size
 * pgqadm: show count of events to be processed [--count switch].
  - broken by retry events, rollbacked transactions and use of force_tick()
 * automatic "repair" - after reaching sync point, the "replay" must be killed/paused, then fixes can be applied

== Just ideas ==

 * skytools: config from database
 * skytools: config-less operation?
 * londiste: somehow automatic sync of table structure/functions/...?

