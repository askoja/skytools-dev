= newadm =

== Goal ==

Easy to use admin console to examine and administer PgQ queues.
Main feature is psql like tab-completion for everything (queue/consumer names).

== Current direction ==

* Cmdline switches similar to psql.
* No config file. (?)
* SQL-like syntax (potential to accept full SQL).
* Target is console usage, not scripts.
* Info about both plain and cascaded queues.
* Administer only plain queues.

== Potential future directions ==

 * SQL Scripts.
  - Full SQL
  - Variables?
  - Logic?
 * Admin scripts for cascaded queues.  Eg. implement current "switchover", "change-provider"
   commands with it.
  - Needs variables and multi-node support (execute on this node).
    Maybe look at the paralled exec features of psql.
 * Admin scripts for something else.
  - data maintainer?
  - release_script?

== Command line ==


  -U:: username
  -h:: host
  -p:: port
  -d:: database
 
  --help:: help
  --version:: version

== Internal language ==

All the commands assume they are connected to a database.

Raw connect, maybe set default queue:

  CONNECT dbname=.. host=.. port=.. user=.. password=.. queue=..;

Set default queue:

  CONNECT queue=..;

Connect to node on default queue:

  CONNECT node=..;

Plain queue modification:

  CREATE QUEUE <qname> [params?];
  ALTER QUEUE <qname> SET ..;
  REGISTER CONSUMER <cons> ON QUEUE <qname> [AT <tick_id>];
  UNREGISTER CONSUMER <cons> FROM QUEUE <qname>;
  DROP QUEUE <qname>;

Install code:

  INSTALL pgq;      -- txid, pgq, pgq_ext, pgq_node
  INSTALL londiste; -- all of above + londiste

Information:

  SHOW QUEUE (<qname> | *);
  SHOW CONSUMER (<cons> | *) [ ON <qname | * ];
  SHOW BATCH INFO (<id> | <consumer>) [ON <queue>?];
  SHOW BATCH EVENTS (<id> | <consumer>) [ON <queue>?];

== Smaller Open Questions ==

* What arguments should newadm accept from command line?

  psql-style: newadm [switches] [dbname [username]]
  ssh-style:  newadm [switches] [command [args]]

* Command style and syntax.

* Multi-word vs. long words:
 - SHOW BATCH EVENTS <id>;
 - SHOW_BATCH_EVENTS <id>;

* Default queue vs. queue name in commands.

